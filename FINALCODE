#INSTALL MODULES
!pip install spotipy --user
!pip install -q requests 

#IMPORT MODULES
import os
import sys
import json
import spotipy
import urllib3
import spotipy.util as util
from json.decoder import JSONDecodeError
import pandas as pd

#ENTER CREDENTIALS 

util.prompt_for_user_token('lucindatoreo',client_id='59737fd0501a478b9700df52f3517221',client_secret='458823422e7141eeaeb0d2ea760e5c77',redirect_uri='http:/google/com/')
url = 'https://accounts.spotify.com/authorize?client_id=59737fd0501a478b9700df52f3517221&response_type=code&redirect_uri=http%3A%2F%2Fgoogle.com%2F%0A'
response = requests.get(url)

#SET USERNAME VARIABLE
username = lucindatoreo

#USER ID: LUCINDATOREO

#ERASE CACHE AND ASK FOR PERMISSION

try:
    token = util.prompt_for_user_token(username)
except: 
    os.remove(f".cache-(username)")
    token = util.prompt_for_user_token(username)
    
#CREATE SPOTIFY OBJECT
spotifyObject= spotipy.Spotify(auth=token)

#CREATE FUNCTION TO SEARCH PLAYLIST CONTENT
def PlaylistSearch(playlist):
    for i, item in enumerate(playlist['items']):
        track = item['track']
        print(
            "   %d %32.32s %s" %
            (i, track['artists'][0]['name'], track['name']))


if __name__ == '__main__':
    if len(sys.argv) > 1:
        username = 'lucindatoreo'
    else:
        print("Whoops, need your username!")
        print("usage: python user_playlists_contents.py [username]")
        sys.exit()

    token = util.prompt_for_user_token(username)

    if token:
        sp = spotipy.Spotify(auth=token)
        playlists = sp.user_playlists(username)
        for playlist in playlists['items']:
            if playlist['owner']['id'] == username:
                print()
                print(playlist['name'])
                print('  total tracks', playlist['tracks']['total'])
                results = sp.playlist(playlist['id'], fields="tracks,next")
                tracks = results['tracks']
                show_tracks(tracks)
                while tracks['next']:
                    tracks = sp.next(tracks)
                    show_tracks(tracks)
    else:
        print("Can't get token for", username)
return track['name']

#PROMPT USER TO ENTER PLAYLISTS AND SAVE AS JSON

playlist_one = input("Enter the url of a playlist")
playlist_two = input("Enter the url of another playlist")

def save_json_data(playlist_one, output_file):
# Write json data into a file
    with open(output_playlistone, "w") as f:
        json.dump(json_data, f)
return output_playlistone.txt

def save_json_data(playlist_two, output_file):
# Write json data into a file
    with open(output_playlisttwo, "w") as f:
        json.dump(json_data, f)
return output_playlisttwo.txt

#COMPARE THE TWO PLAYLIST FILES

    f1=open("output_playlistone.txt","r")
f2=open("output_playlisttwo.txt","r")
for line1 in f1:
    for line2 in f2:
        if line1==line2:
            print("SAME\n")
        else:
            print(line1 + line2)
        break
f1.close()
f2.close()

 #VARIABLES   
similar_amount, unique_amount, similar, different

print(f"Playlist one and two have {similar_amount} of songs")
print(f"These are the tracks in common: {similar}")
print(f"Playlist one has {unique_amount} different tracks from playlist 2")
print(f"These are the unique tracks: {different}")
